{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matia\\\\appservices\\\\front\\\\src\\\\historialClientes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './paneluser.css';\nimport jsPDF from 'jspdf';\nimport Dataimage from './img.js';\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClientesXml() {\n  _s();\n  const [clientesXml, setClientesXml] = useState([]);\n  const [nombre, setNombre] = useState('');\n  const [telefono, setTelefono] = useState('');\n  const [cargando, setCargando] = useState(true);\n  const navigate = useNavigate();\n  const fetchClientesXML = () => {\n    fetch('/api/clientes/lista-completa', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (Array.isArray(data.listaCompleta)) {\n        setClientesXml(data.listaCompleta);\n      } else {\n        console.error('La respuesta no es un array:', data);\n        setClientesXml([]);\n      }\n    }).catch(error => {\n      console.log('Error al buscar clientes:', error);\n      setClientesXml([]);\n    });\n  };\n  const fetchNombre = async () => {\n    try {\n      const res = await fetch('/api/usuarios/nombre', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setNombre(data.nombre || \"\");\n      } else {\n        setNombre(\"\");\n      }\n    } catch (error) {\n      console.log('Error al obtener el nombre del usuario:', error);\n      setNombre(\"\");\n    } finally {\n      setCargando(false);\n    }\n  };\n  const fetchTelefono = () => {\n    fetch('/api/usuarios/telefono', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (data.telefono) {\n        setTelefono(data.telefono);\n      }\n    }).catch(error => {\n      console.log('Error al obtener el telefono del usuario:', error);\n    });\n  };\n  const boleta = async (nombre, nombrecliente, descripcion, telefonoC, codigoCli) => {\n    fetchTelefono();\n    let telusuario = telefono;\n    let data = 'COMPROBANTE \\n' + `\\n` + `Emisor: ${nombre} , tel: ${telusuario}\\n` + `\\n` + `Nombre del cliente: ${nombrecliente} \\n` + `\\n` + `Descripción: ${descripcion} \\n` + `\\n` + `Teléfono cliente: ${telefonoC}` + `\\n` + `\\n` + `Código: ${codigoCli}`;\n    const doc = new jsPDF();\n    doc.addImage(Dataimage, 'PNG', 80, 10, 45, 45);\n    doc.setFontSize(22);\n    doc.text(data, 50, 70);\n    doc.save('boleta.pdf');\n  };\n  useEffect(() => {\n    fetchClientesXML();\n    fetchNombre();\n  }, []);\n  useEffect(() => {\n    if (!cargando && !nombre) {\n      navigate(\"/Ingreso\");\n    }\n  }, [cargando, nombre, navigate]);\n  if (!nombre) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paneladmin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hola, \", nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Clientes\",\n      children: \"Volver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputbuscador\",\n      type: \"text\",\n      value: filtro,\n      onChange: e => setFiltro(e.target.value),\n      placeholder: \"Buscar por nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ulcli\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lista completa de clientes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listacliente\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Descripci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tel\\xE9fono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), clientesXml.map(cliente => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listacliente\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: cliente.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"descripcioncliente\",\n          children: cliente.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cliente.telefono\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cliente.estado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"listabotones\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnboleta\",\n            onClick: () => boleta(nombre, cliente.nombre, cliente.descripcion, cliente.telefono, cliente.codigo),\n            children: \"Boleta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)]\n      }, cliente.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n_s(ClientesXml, \"FK8H+g+wk7IyNKbtnhKGMG1GEyo=\", false, function () {\n  return [useNavigate];\n});\n_c = ClientesXml;\nexport default ClientesXml;\nvar _c;\n$RefreshReg$(_c, \"ClientesXml\");","map":{"version":3,"names":["React","useEffect","useState","jsPDF","Dataimage","useNavigate","Link","jsxDEV","_jsxDEV","ClientesXml","_s","clientesXml","setClientesXml","nombre","setNombre","telefono","setTelefono","cargando","setCargando","navigate","fetchClientesXML","fetch","method","credentials","then","res","json","data","Array","isArray","listaCompleta","console","error","catch","log","fetchNombre","ok","fetchTelefono","boleta","nombrecliente","descripcion","telefonoC","codigoCli","telusuario","doc","addImage","setFontSize","text","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","type","value","filtro","onChange","e","setFiltro","target","placeholder","map","cliente","estado","onClick","codigo","id","_c","$RefreshReg$"],"sources":["C:/Users/matia/appservices/front/src/historialClientes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './paneluser.css';\r\n\r\n\r\nimport jsPDF from 'jspdf';\r\nimport Dataimage from './img.js';\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\n\r\nfunction  ClientesXml() {\r\n    const [clientesXml, setClientesXml] = useState([]);\r\n    const [nombre, setNombre] = useState('');\r\n    const [telefono, setTelefono] = useState('');\r\n    const [cargando, setCargando] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const fetchClientesXML = () => {\r\n        fetch('/api/clientes/lista-completa',{\r\n        method: 'GET',\r\n        credentials: 'include'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (Array.isArray(data.listaCompleta)) {\r\n            setClientesXml(data.listaCompleta);\r\n            } else {\r\n            console.error('La respuesta no es un array:', data);\r\n            setClientesXml([]);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('Error al buscar clientes:', error);\r\n            setClientesXml([]);\r\n        });\r\n    };\r\n    \r\n\r\n\r\n\r\n    const fetchNombre = async () => {\r\n        try{\r\n        const res = await fetch('/api/usuarios/nombre',{\r\n        method: 'GET',\r\n        credentials: 'include'\r\n        });\r\n            if (res.ok) {\r\n            const data = await res.json();\r\n            setNombre(data.nombre || \"\");\r\n            }else{\r\n            setNombre(\"\");\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.log('Error al obtener el nombre del usuario:', error);\r\n            setNombre(\"\");\r\n        } finally {\r\n            setCargando(false);\r\n        }\r\n    };\r\n\r\n    const fetchTelefono = () => {\r\n        fetch('/api/usuarios/telefono',{\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n        if (data.telefono) {\r\n            setTelefono(data.telefono);\r\n        }\r\n        })\r\n        .catch(error => {\r\n        console.log('Error al obtener el telefono del usuario:', error);\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const boleta = async (nombre, nombrecliente, descripcion, telefonoC, codigoCli) =>{\r\n        fetchTelefono();\r\n        let telusuario = telefono;\r\n        let data = 'COMPROBANTE \\n'\r\n                +`\\n`\r\n                + `Emisor: ${nombre} , tel: ${telusuario}\\n`\r\n                +`\\n`\r\n                + `Nombre del cliente: ${nombrecliente} \\n`\r\n                +`\\n`\r\n                + `Descripción: ${descripcion} \\n`\r\n                +`\\n`\r\n                + `Teléfono cliente: ${telefonoC}`\r\n                +`\\n`\r\n                +`\\n`\r\n                + `Código: ${codigoCli}`;\r\n\r\n        const doc = new jsPDF();\r\n\r\n\r\n        doc.addImage(Dataimage, 'PNG',80, 10, 45, 45);\r\n        doc.setFontSize(22);\r\n        doc.text(data, 50, 70);\r\n        doc.save('boleta.pdf');\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchClientesXML();\r\n        fetchNombre();\r\n    }, []);\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        if (!cargando && !nombre) {\r\n        navigate(\"/Ingreso\");\r\n        }\r\n    }, [cargando, nombre, navigate]);\r\n    if (!nombre) {\r\n        return null;\r\n    }\r\n        return (\r\n        <div className=\"paneladmin\">\r\n            <h1>Hola, {nombre}</h1>\r\n            <Link to=\"/Clientes\">Volver</Link>\r\n            <input\r\n            className=\"inputbuscador\"\r\n            type=\"text\"\r\n            value={filtro}\r\n            onChange={(e) => setFiltro(e.target.value)}\r\n            placeholder=\"Buscar por nombre\"\r\n            />\r\n            <ul className=\"ulcli\">\r\n            <p>Lista completa de clientes.</p>\r\n                <li className=\"listacliente\">\r\n                <span>Nombre</span>\r\n                <span>Descripción</span>\r\n                <span>Teléfono</span>\r\n                <span>Estado</span>\r\n                </li>\r\n            {clientesXml.map(cliente => (\r\n                <li  key={cliente.id} className=\"listacliente\">\r\n                <span>{cliente.nombre}</span>\r\n                <span className=\"descripcioncliente\">{cliente.descripcion}</span>\r\n                <span>{cliente.telefono}</span>\r\n                <span>{cliente.estado}</span>\r\n                <span className=\"listabotones\">\r\n                    <button className=\"btnboleta\" onClick={() => boleta(nombre, cliente.nombre, cliente.descripcion, cliente.telefono, cliente.codigo)}>Boleta</button>\r\n                </span>\r\n                </li>\r\n            ))}\r\n\r\n            </ul> \r\n        </div>\r\n        );\r\n}\r\n\r\nexport default ClientesXml;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}