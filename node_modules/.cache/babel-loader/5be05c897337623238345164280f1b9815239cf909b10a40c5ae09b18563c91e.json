{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matia\\\\appservices\\\\front\\\\src\\\\paneluser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FormCliente from \"./componentes/crearCliente.jsx\";\nimport EditarCliente from \"./componentes/editarCliente.jsx\";\nimport './paneluser.css';\nimport { Table, TableBody, TableCaption, TableCell, TableHead, TableHeader, TableRow, TableFooter } from \"./componentes/table.jsx\";\nimport jsPDF from 'jspdf';\nimport Dataimage from './img.js';\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListaClientes() {\n  _s();\n  const [clientes, setClientes] = useState([]);\n  const [nombre, setNombre] = useState(null);\n  const [telefono, setTelefono] = useState('');\n  const [clienteSelec, setClienteSelec] = useState(null);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [mostrarFormularioCliente, setMostrarFormularioCliente] = useState(false);\n  const [cargando, setCargando] = useState(true);\n  const [filtro, setFiltro] = useState(\"\");\n  const navigate = useNavigate();\n  const fetchNombre = async () => {\n    try {\n      const res = await fetch('/api/usuarios/nombre', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setNombre(data.nombre || \"\");\n      } else {\n        setNombre(\"\");\n      }\n    } catch (error) {\n      console.log('Error al obtener el nombre del usuario:', error);\n      setNombre(\"\");\n    } finally {\n      setCargando(false);\n    }\n  };\n  const fetchTelefono = () => {\n    fetch('/api/usuarios/telefono', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (data.telefono) {\n        setTelefono(data.telefono);\n      }\n    }).catch(error => {\n      console.log('Error al obtener el telefono del usuario:', error);\n    });\n  };\n  const borrar = async clienteId => {\n    try {\n      await fetch(`/api/clientes/eliminar/${clienteId}`, {\n        method: 'PUT',\n        credentials: 'include'\n      });\n      setClientes(prevClientes => prevClientes.filter(cliente => cliente.id !== clienteId));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const boleta = async (nombre, nombrecliente, descripcion, telefonoC, codigoCli) => {\n    fetchTelefono();\n    let telusuario = telefono;\n    let data = 'COMPROBANTE \\n' + `\\n` + `Emisor: ${nombre} , tel: ${telusuario}\\n` + `\\n` + `Nombre del cliente: ${nombrecliente} \\n` + `\\n` + `Descripción: ${descripcion} \\n` + `\\n` + `Teléfono cliente: ${telefonoC}` + `\\n` + `\\n` + `Código: ${codigoCli}`;\n    const doc = new jsPDF();\n    doc.addImage(Dataimage, 'PNG', 80, 10, 45, 45);\n    doc.setFontSize(22);\n    doc.text(data, 50, 70);\n    doc.save('boleta.pdf');\n  };\n  const clientesFiltrados = clientes.filter(cliente => {\n    const palabras = filtro.toUpperCase().split(\" \");\n    const nombreCliente = cliente.nombre.toUpperCase();\n    return palabras.every(palabra => nombreCliente.includes(palabra));\n  });\n  const fetchClientes = () => {\n    fetch('/api/clientes/lista', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (Array.isArray(data.listaClientes)) {\n        setClientes(data.listaClientes);\n      } else {\n        console.error('La respuesta no es un array:', data);\n        setClientes([]);\n      }\n    }).catch(error => {\n      console.log('Error al buscar clientes:', error);\n      setClientes([]);\n    });\n  };\n  useEffect(() => {\n    fetchClientes();\n    fetchNombre();\n    fetchTelefono();\n  }, []);\n  const verCliente = () => {\n    setMostrarFormulario(true);\n  };\n  const ocultarForm = () => {\n    setMostrarFormulario(false);\n  };\n  const agregarCliente = nuevoCliente => {\n    setClientes(prevClientes => [...prevClientes, nuevoCliente]);\n  };\n  const verFormCliente = () => {\n    setMostrarFormularioCliente(true);\n  };\n  const ocultarFormCliente = () => {\n    setMostrarFormularioCliente(false);\n  };\n  useEffect(() => {\n    if (!cargando && !nombre) {\n      navigate(\"/Ingreso\");\n    }\n  }, [cargando, nombre, navigate]);\n  if (!nombre) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paneladmin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hola, \", nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn2\",\n      onClick: verCliente,\n      children: \"A\\xF1adir Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"\",\n      type: \"text\",\n      value: filtro,\n      onChange: e => setFiltro(e.target.value),\n      placeholder: \"Buscar por nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/HistorialClientes\",\n      children: \"Ver historial completo aqui.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), mostrarFormulario && /*#__PURE__*/_jsxDEV(FormCliente, {\n      agregarCliente: agregarCliente,\n      ocultarForm: ocultarForm,\n      fetchClientes: fetchClientes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ulcli\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lista de clientes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listacliente\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Descripci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tel\\xE9fono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this), clientesFiltrados.map(cliente => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listacliente\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: cliente.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"descripcioncliente\",\n          children: cliente.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cliente.telefono\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cliente.estado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"listabotones\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnboleta\",\n            onClick: () => boleta(nombre, cliente.nombre, cliente.descripcion, cliente.telefono, cliente.codigo),\n            children: \"Boleta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn3\",\n            onClick: () => {\n              setClienteSelec(cliente);\n              verFormCliente();\n            },\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn3\",\n            onClick: () => borrar(cliente.id, setClientes),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this)]\n      }, cliente.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), clienteSelec && mostrarFormularioCliente && /*#__PURE__*/_jsxDEV(EditarCliente, {\n      ocultarFormCliente: ocultarFormCliente,\n      fetchClientes: fetchClientes,\n      id: clienteSelec.id,\n      nombree: clienteSelec.nombre,\n      descripcionn: clienteSelec.descripcion,\n      cel: clienteSelec.telefono\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 7\n  }, this);\n}\n_s(ListaClientes, \"TVEO64+YzABIcD8Suezwmab7Utk=\", false, function () {\n  return [useNavigate];\n});\n_c = ListaClientes;\nexport default ListaClientes;\nvar _c;\n$RefreshReg$(_c, \"ListaClientes\");","map":{"version":3,"names":["React","useEffect","useState","FormCliente","EditarCliente","Table","TableBody","TableCaption","TableCell","TableHead","TableHeader","TableRow","TableFooter","jsPDF","Dataimage","useNavigate","Link","jsxDEV","_jsxDEV","ListaClientes","_s","clientes","setClientes","nombre","setNombre","telefono","setTelefono","clienteSelec","setClienteSelec","mostrarFormulario","setMostrarFormulario","mostrarFormularioCliente","setMostrarFormularioCliente","cargando","setCargando","filtro","setFiltro","navigate","fetchNombre","res","fetch","method","credentials","ok","data","json","error","console","log","fetchTelefono","then","catch","borrar","clienteId","prevClientes","filter","cliente","id","e","boleta","nombrecliente","descripcion","telefonoC","codigoCli","telusuario","doc","addImage","setFontSize","text","save","clientesFiltrados","palabras","toUpperCase","split","nombreCliente","every","palabra","includes","fetchClientes","Array","isArray","listaClientes","verCliente","ocultarForm","agregarCliente","nuevoCliente","verFormCliente","ocultarFormCliente","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","target","placeholder","to","map","estado","codigo","nombree","descripcionn","cel","_c","$RefreshReg$"],"sources":["C:/Users/matia/appservices/front/src/paneluser.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FormCliente from \"./componentes/crearCliente.jsx\";\r\nimport EditarCliente from \"./componentes/editarCliente.jsx\";\r\nimport './paneluser.css';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCaption,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n  TableFooter\r\n} from \"./componentes/table.jsx\";\r\n\r\nimport jsPDF from 'jspdf';\r\nimport Dataimage from './img.js';\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\n\r\n  \r\n\r\nfunction  ListaClientes() {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [nombre, setNombre] = useState(null);\r\n  const [telefono, setTelefono] = useState('');\r\n  const [clienteSelec, setClienteSelec] = useState(null);\r\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\r\n  const [mostrarFormularioCliente, setMostrarFormularioCliente] = useState(false);\r\n  const [cargando, setCargando] = useState(true);\r\n  const [filtro, setFiltro] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const fetchNombre = async () => {\r\n    try{\r\n    const res = await fetch('/api/usuarios/nombre',{\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    });\r\n        if (res.ok) {\r\n          const data = await res.json();\r\n          setNombre(data.nombre || \"\");\r\n        }else{\r\n          setNombre(\"\");\r\n        }\r\n    }\r\n      catch(error) {\r\n        console.log('Error al obtener el nombre del usuario:', error);\r\n        setNombre(\"\");\r\n      } finally {\r\n        setCargando(false);\r\n      }\r\n  };\r\n\r\n  const fetchTelefono = () => {\r\n    fetch('/api/usuarios/telefono',{\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.telefono) {\r\n          setTelefono(data.telefono);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log('Error al obtener el telefono del usuario:', error);\r\n      });\r\n  };\r\n\r\n\r\n  const borrar = async (clienteId) =>{\r\n    try{\r\n      await fetch(`/api/clientes/eliminar/${clienteId}`,{\r\n        method: 'PUT',\r\n        credentials: 'include'\r\n      })\r\n      setClientes(prevClientes => prevClientes.filter(cliente => cliente.id !== clienteId));\r\n    }catch(e){\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const boleta = async (nombre, nombrecliente, descripcion, telefonoC, codigoCli) =>{\r\n    fetchTelefono();\r\n    let telusuario = telefono;\r\n    let data = 'COMPROBANTE \\n'\r\n              +`\\n`\r\n              + `Emisor: ${nombre} , tel: ${telusuario}\\n`\r\n              +`\\n`\r\n              + `Nombre del cliente: ${nombrecliente} \\n`\r\n              +`\\n`\r\n              + `Descripción: ${descripcion} \\n`\r\n              +`\\n`\r\n              + `Teléfono cliente: ${telefonoC}`\r\n              +`\\n`\r\n              +`\\n`\r\n              + `Código: ${codigoCli}`;\r\n\r\n    const doc = new jsPDF();\r\n\r\n\r\n    doc.addImage(Dataimage, 'PNG',80, 10, 45, 45);\r\n    doc.setFontSize(22);\r\n    doc.text(data, 50, 70);\r\n    doc.save('boleta.pdf');\r\n\r\n  };\r\n\r\n  const clientesFiltrados = clientes.filter((cliente) => {\r\n    const palabras = filtro.toUpperCase().split(\" \");\r\n    const nombreCliente = cliente.nombre.toUpperCase();\r\n\r\n    return palabras.every((palabra) => nombreCliente.includes(palabra));\r\n  });\r\n\r\n\r\n  const fetchClientes = () => {\r\n    fetch('/api/clientes/lista',{\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (Array.isArray(data.listaClientes)) {\r\n          setClientes(data.listaClientes);\r\n        } else {\r\n          console.error('La respuesta no es un array:', data);\r\n          setClientes([]);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log('Error al buscar clientes:', error);\r\n        setClientes([]);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClientes();\r\n    fetchNombre();\r\n    fetchTelefono();\r\n  }, []);\r\n  \r\n  \r\n\r\n  const verCliente = () => {\r\n    setMostrarFormulario(true);\r\n  };\r\n\r\n  const ocultarForm = () => {\r\n    setMostrarFormulario(false);\r\n  };\r\n\r\n  const agregarCliente = (nuevoCliente) => {\r\n    setClientes(prevClientes => [...prevClientes, nuevoCliente]); \r\n  };\r\n\r\n\r\n\r\n  const verFormCliente = () => {\r\n    setMostrarFormularioCliente(true);\r\n  };\r\n\r\n  const ocultarFormCliente = () => {\r\n    setMostrarFormularioCliente(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!cargando && !nombre) {\r\n      navigate(\"/Ingreso\");\r\n    }\r\n  }, [cargando, nombre, navigate]);\r\n  if (!nombre) {\r\n      return null;\r\n  }\r\n    return (\r\n      <div className=\"paneladmin\">\r\n        <h1>Hola, {nombre}</h1>\r\n        <button className=\"btn2\" onClick={verCliente}>Añadir Cliente</button>\r\n        <input\r\n        className=\"\"\r\n        type=\"text\"\r\n        value={filtro}\r\n        onChange={(e) => setFiltro(e.target.value)}\r\n        placeholder=\"Buscar por nombre\"\r\n        />\r\n        <Link to=\"/HistorialClientes\">Ver historial completo aqui.</Link>\r\n        {mostrarFormulario && <FormCliente agregarCliente={agregarCliente} ocultarForm={ocultarForm} fetchClientes={fetchClientes} />}\r\n        \r\n        \r\n        <ul className=\"ulcli\">\r\n          <p>Lista de clientes.</p>\r\n            <li className=\"listacliente\">\r\n              <span>Nombre</span>\r\n              <span>Descripción</span>\r\n              <span>Teléfono</span>\r\n              <span>Estado</span>\r\n            </li>\r\n          {clientesFiltrados.map(cliente => (\r\n            <li  key={cliente.id} className=\"listacliente\">\r\n              <span>{cliente.nombre}</span>\r\n              <span className=\"descripcioncliente\">{cliente.descripcion}</span>\r\n              <span>{cliente.telefono}</span>\r\n              <span>{cliente.estado}</span>\r\n              <span className=\"listabotones\">\r\n                <button className=\"btnboleta\" onClick={() => boleta(nombre, cliente.nombre, cliente.descripcion, cliente.telefono, cliente.codigo)}>Boleta</button>\r\n                <button className=\"btn3\" onClick={() => {setClienteSelec(cliente); verFormCliente();}}>Editar</button>\r\n                <button className=\"btn3\" onClick={() => borrar(cliente.id, setClientes)}>Eliminar</button>\r\n              </span>\r\n              \r\n            </li>\r\n          ))}\r\n\r\n        </ul> \r\n        {clienteSelec && mostrarFormularioCliente &&\r\n                <EditarCliente \r\n                  ocultarFormCliente={ocultarFormCliente} \r\n                  fetchClientes={fetchClientes}\r\n                  id={clienteSelec.id} \r\n                  nombree={clienteSelec.nombre} \r\n                  descripcionn={clienteSelec.descripcion} \r\n                  cel={clienteSelec.telefono}\r\n                />\r\n            }\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default ListaClientes;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}