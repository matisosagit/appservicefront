{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matia\\\\appservices\\\\front\\\\src\\\\paneluser.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FormCliente from \"./componentes/crearCliente.jsx\";\nimport EditarCliente from \"./componentes/editarCliente.jsx\";\nimport './paneluser.css';\nimport { Table, TableBody, TableCaption, TableCell, TableHead, TableHeader, TableRow, TableFooter } from \"./componentes/table.jsx\";\nimport jsPDF from 'jspdf';\nimport Dataimage from './img.js';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClientesXml() {\n  _s();\n  const [clientesXml, setClientesXml] = useState([]);\n  const [nombre, setNombre] = useState('');\n  const [telefono, setTelefono] = useState('');\n  const [clienteSelec, setClienteSelec] = useState(null);\n  fetch('/api/clientes/lista-completa', {\n    method: 'GET',\n    credentials: 'include'\n  }).then(res => res.json()).then(data => {\n    if (data.listaCompleta) {\n      setClientesXml(data.listaCompleta);\n    }\n  }).catch(error => {\n    console.log('Error al buscar lista de clientes: ', error);\n  });\n}\n_s(ClientesXml, \"4W4fLD+zgBZgP89Q4P8o1/qvygY=\");\n_c = ClientesXml;\n;\nfunction ListaClientes() {\n  _s2();\n  const [clientes, setClientes] = useState([]);\n  const [nombre, setNombre] = useState(null);\n  const [telefono, setTelefono] = useState('');\n  const [clienteSelec, setClienteSelec] = useState(null);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [mostrarFormularioCliente, setMostrarFormularioCliente] = useState(false);\n  const [cargando, setCargando] = useState(true);\n  const navigate = useNavigate();\n  const fetchNombre = async () => {\n    try {\n      fetch('/api/usuarios/nombre', {\n        method: 'GET',\n        credentials: 'include'\n      }).then(res => res.json()).then(data => {\n        if (data.nombre || \"\") {\n          setNombre(data.nombre);\n        } else {\n          setNombre(\"\");\n        }\n      });\n    } catch (error) {\n      console.log('Error al obtener el nombre del usuario:', error);\n      setNombre(\"\");\n    } finally {\n      setCargando(false);\n    }\n  };\n  const fetchTelefono = () => {\n    fetch('/api/usuarios/telefono', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (data.telefono) {\n        setTelefono(data.telefono);\n      }\n    }).catch(error => {\n      console.log('Error al obtener el telefono del usuario:', error);\n    });\n  };\n  const borrar = async clienteId => {\n    try {\n      await fetch(`/api/clientes/eliminar/${clienteId}`, {\n        method: 'PUT',\n        credentials: 'include'\n      });\n      setClientes(prevClientes => prevClientes.filter(cliente => cliente.id !== clienteId));\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const boleta = async (nombre, nombrecliente, descripcion, telefonoC, codigoCli) => {\n    fetchTelefono();\n    let telusuario = telefono;\n    let data = 'COMPROBANTE \\n' + `\\n` + `Emisor: ${nombre} , tel: ${telusuario}\\n` + `\\n` + `Nombre del cliente: ${nombrecliente} \\n` + `\\n` + `Descripción: ${descripcion} \\n` + `\\n` + `Teléfono cliente: ${telefonoC}` + `\\n` + `\\n` + `Código: ${codigoCli}`;\n    const doc = new jsPDF();\n    doc.addImage(Dataimage, 'PNG', 80, 10, 45, 45);\n    doc.setFontSize(22);\n    doc.text(data, 50, 70);\n    doc.save('boleta.pdf');\n  };\n  const fetchClientes = () => {\n    fetch('/api/clientes/lista', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (Array.isArray(data.listaClientes)) {\n        setClientes(data.listaClientes);\n      } else {\n        console.error('La respuesta no es un array:', data);\n        setClientes([]);\n      }\n    }).catch(error => {\n      console.log('Error al buscar clientes:', error);\n      setClientes([]);\n    });\n  };\n  useEffect(() => {\n    fetchClientes();\n    fetchNombre();\n    fetchTelefono();\n    setCargando(false);\n  }, []);\n  const verCliente = () => {\n    setMostrarFormulario(true);\n  };\n  const ocultarForm = () => {\n    setMostrarFormulario(false);\n  };\n  const agregarCliente = nuevoCliente => {\n    setClientes(prevClientes => [...prevClientes, nuevoCliente]);\n  };\n  const agregarNombre = nombre => {\n    setNombre(nombre);\n  };\n  const verFormCliente = () => {\n    setMostrarFormularioCliente(true);\n  };\n  const ocultarFormCliente = () => {\n    setMostrarFormularioCliente(false);\n  };\n  useEffect(() => {\n    if (!cargando && !nombre) {\n      navigate(\"/Ingreso\");\n    }\n  }, [cargando, nombre, navigate]);\n  if (!nombre) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paneladmin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hola, \", nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn2\",\n      onClick: verCliente,\n      children: \"A\\xF1adir Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), mostrarFormulario && /*#__PURE__*/_jsxDEV(FormCliente, {\n      agregarCliente: agregarCliente,\n      ocultarForm: ocultarForm,\n      fetchClientes: fetchClientes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ulcli\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lista de clientes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listacliente\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Descripci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tel\\xE9fono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), clientes.map(cliente => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"listacliente\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: cliente.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"descripcioncliente\",\n          children: cliente.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cliente.telefono\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cliente.estado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"listabotones\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnboleta\",\n            onClick: () => boleta(nombre, cliente.nombre, cliente.descripcion, cliente.telefono, cliente.codigo),\n            children: \"Boleta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn3\",\n            onClick: () => {\n              setClienteSelec(cliente);\n              verFormCliente();\n            },\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn3\",\n            onClick: () => borrar(cliente.id, setClientes),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)]\n      }, cliente.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), clienteSelec && mostrarFormularioCliente && /*#__PURE__*/_jsxDEV(EditarCliente, {\n      ocultarFormCliente: ocultarFormCliente,\n      fetchClientes: fetchClientes,\n      id: clienteSelec.id,\n      nombree: clienteSelec.nombre,\n      descripcionn: clienteSelec.descripcion,\n      cel: clienteSelec.telefono\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 7\n  }, this);\n}\n_s2(ListaClientes, \"acubK3mkRfgUOyyUP4F9foa0kZk=\", false, function () {\n  return [useNavigate];\n});\n_c2 = ListaClientes;\nexport default ListaClientes;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClientesXml\");\n$RefreshReg$(_c2, \"ListaClientes\");","map":{"version":3,"names":["React","useEffect","useState","FormCliente","EditarCliente","Table","TableBody","TableCaption","TableCell","TableHead","TableHeader","TableRow","TableFooter","jsPDF","Dataimage","useNavigate","jsxDEV","_jsxDEV","ClientesXml","_s","clientesXml","setClientesXml","nombre","setNombre","telefono","setTelefono","clienteSelec","setClienteSelec","fetch","method","credentials","then","res","json","data","listaCompleta","catch","error","console","log","_c","ListaClientes","_s2","clientes","setClientes","mostrarFormulario","setMostrarFormulario","mostrarFormularioCliente","setMostrarFormularioCliente","cargando","setCargando","navigate","fetchNombre","fetchTelefono","borrar","clienteId","prevClientes","filter","cliente","id","e","boleta","nombrecliente","descripcion","telefonoC","codigoCli","telusuario","doc","addImage","setFontSize","text","save","fetchClientes","Array","isArray","listaClientes","verCliente","ocultarForm","agregarCliente","nuevoCliente","agregarNombre","verFormCliente","ocultarFormCliente","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","estado","codigo","nombree","descripcionn","cel","_c2","$RefreshReg$"],"sources":["C:/Users/matia/appservices/front/src/paneluser.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FormCliente from \"./componentes/crearCliente.jsx\";\r\nimport EditarCliente from \"./componentes/editarCliente.jsx\";\r\nimport './paneluser.css';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCaption,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n  TableFooter\r\n} from \"./componentes/table.jsx\";\r\n\r\nimport jsPDF from 'jspdf';\r\nimport Dataimage from './img.js';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction  ClientesXml() {\r\n  const [clientesXml, setClientesXml] = useState([]);\r\n  const [nombre, setNombre] = useState('');\r\n  const [telefono, setTelefono] = useState('');\r\n  const [clienteSelec, setClienteSelec] = useState(null);\r\n  fetch('/api/clientes/lista-completa',{\r\n    method: 'GET',\r\n    credentials: 'include'\r\n  })\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    if(data.listaCompleta){\r\n      setClientesXml(data.listaCompleta);\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.log('Error al buscar lista de clientes: ',error);\r\n  });\r\n};\r\n  \r\n\r\nfunction  ListaClientes() {\r\n  const [clientes, setClientes] = useState([]);\r\n  const [nombre, setNombre] = useState(null);\r\n  const [telefono, setTelefono] = useState('');\r\n  const [clienteSelec, setClienteSelec] = useState(null);\r\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\r\n  const [mostrarFormularioCliente, setMostrarFormularioCliente] = useState(false);\r\n  const [cargando, setCargando] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchNombre = async () => {\r\n    try{\r\n    fetch('/api/usuarios/nombre',{\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.nombre || \"\") {\r\n          setNombre(data.nombre);\r\n        }else{\r\n          setNombre(\"\");\r\n        }\r\n      })\r\n    }\r\n      catch(error) {\r\n        console.log('Error al obtener el nombre del usuario:', error);\r\n        setNombre(\"\");\r\n      } finally {\r\n        setCargando(false);\r\n      }\r\n  };\r\n\r\n  const fetchTelefono = () => {\r\n    fetch('/api/usuarios/telefono',{\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.telefono) {\r\n          setTelefono(data.telefono);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log('Error al obtener el telefono del usuario:', error);\r\n      });\r\n  };\r\n\r\n\r\n  const borrar = async (clienteId) =>{\r\n    try{\r\n      await fetch(`/api/clientes/eliminar/${clienteId}`,{\r\n        method: 'PUT',\r\n        credentials: 'include'\r\n      })\r\n      setClientes(prevClientes => prevClientes.filter(cliente => cliente.id !== clienteId));\r\n    }catch(e){\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const boleta = async (nombre, nombrecliente, descripcion, telefonoC, codigoCli) =>{\r\n    fetchTelefono();\r\n    let telusuario = telefono;\r\n    let data = 'COMPROBANTE \\n'\r\n              +`\\n`\r\n              + `Emisor: ${nombre} , tel: ${telusuario}\\n`\r\n              +`\\n`\r\n              + `Nombre del cliente: ${nombrecliente} \\n`\r\n              +`\\n`\r\n              + `Descripción: ${descripcion} \\n`\r\n              +`\\n`\r\n              + `Teléfono cliente: ${telefonoC}`\r\n              +`\\n`\r\n              +`\\n`\r\n              + `Código: ${codigoCli}`;\r\n\r\n    const doc = new jsPDF();\r\n\r\n\r\n    doc.addImage(Dataimage, 'PNG',80, 10, 45, 45);\r\n    doc.setFontSize(22);\r\n    doc.text(data, 50, 70);\r\n    doc.save('boleta.pdf');\r\n\r\n  };\r\n\r\n  const fetchClientes = () => {\r\n    fetch('/api/clientes/lista',{\r\n      method: 'GET',\r\n      credentials: 'include'\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (Array.isArray(data.listaClientes)) {\r\n          setClientes(data.listaClientes);\r\n        } else {\r\n          console.error('La respuesta no es un array:', data);\r\n          setClientes([]);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log('Error al buscar clientes:', error);\r\n        setClientes([]);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClientes();\r\n    fetchNombre();\r\n    fetchTelefono();\r\n\r\n    setCargando(false);\r\n  }, []);\r\n  \r\n  \r\n\r\n  const verCliente = () => {\r\n    setMostrarFormulario(true);\r\n  };\r\n\r\n  const ocultarForm = () => {\r\n    setMostrarFormulario(false);\r\n  };\r\n\r\n  const agregarCliente = (nuevoCliente) => {\r\n    setClientes(prevClientes => [...prevClientes, nuevoCliente]); \r\n  };\r\n\r\n  const agregarNombre = (nombre) => {\r\n    setNombre(nombre);\r\n  };\r\n\r\n  const verFormCliente = () => {\r\n    setMostrarFormularioCliente(true);\r\n  };\r\n\r\n  const ocultarFormCliente = () => {\r\n    setMostrarFormularioCliente(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!cargando && !nombre) {\r\n      navigate(\"/Ingreso\");\r\n    }\r\n  }, [cargando, nombre, navigate]);\r\n  if (!nombre) {\r\n      return null;\r\n  }\r\n    return (\r\n      <div className=\"paneladmin\">\r\n        <h1>Hola, {nombre}</h1>\r\n        <button className=\"btn2\" onClick={verCliente}>Añadir Cliente</button>\r\n        {mostrarFormulario && <FormCliente agregarCliente={agregarCliente} ocultarForm={ocultarForm} fetchClientes={fetchClientes} />}\r\n        \r\n        \r\n        <ul className=\"ulcli\">\r\n          <p>Lista de clientes.</p>\r\n            <li className=\"listacliente\">\r\n              <span>Nombre</span>\r\n              <span>Descripción</span>\r\n              <span>Teléfono</span>\r\n              <span>Estado</span>\r\n            </li>\r\n          {clientes.map(cliente => (\r\n            <li  key={cliente.id} className=\"listacliente\">\r\n              <span>{cliente.nombre}</span>\r\n              <span className=\"descripcioncliente\">{cliente.descripcion}</span>\r\n              <span>{cliente.telefono}</span>\r\n              <span>{cliente.estado}</span>\r\n              <span className=\"listabotones\">\r\n                <button className=\"btnboleta\" onClick={() => boleta(nombre, cliente.nombre, cliente.descripcion, cliente.telefono, cliente.codigo)}>Boleta</button>\r\n                <button className=\"btn3\" onClick={() => {setClienteSelec(cliente); verFormCliente();}}>Editar</button>\r\n                <button className=\"btn3\" onClick={() => borrar(cliente.id, setClientes)}>Eliminar</button>\r\n              </span>\r\n              \r\n            </li>\r\n          ))}\r\n\r\n        </ul> \r\n        {clienteSelec && mostrarFormularioCliente &&\r\n                <EditarCliente \r\n                  ocultarFormCliente={ocultarFormCliente} \r\n                  fetchClientes={fetchClientes}\r\n                  id={clienteSelec.id} \r\n                  nombree={clienteSelec.nombre} \r\n                  descripcionn={clienteSelec.descripcion} \r\n                  cel={clienteSelec.telefono}\r\n                />\r\n            }\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default ListaClientes;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}