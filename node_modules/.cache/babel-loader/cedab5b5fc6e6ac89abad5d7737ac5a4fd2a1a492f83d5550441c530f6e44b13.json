{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import'./paneluser.css';import jsPDF from'jspdf';import Dataimage from'./img.js';import{useNavigate,Link}from\"react-router-dom\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function ClientesXml(){const[clientesXml,setClientesXml]=useState([]);const[nombre,setNombre]=useState('');const[telefono,setTelefono]=useState('');const[cargando,setCargando]=useState(true);const[filtro,setFiltro]=useState(\"\");const navigate=useNavigate();const fetchClientesXML=()=>{fetch('/api/clientes/lista-completa',{method:'GET',credentials:'include'}).then(res=>res.json()).then(data=>{if(Array.isArray(data.listaCompleta)){setClientesXml(data.listaCompleta);}else{console.error('La respuesta no es un array:',data);setClientesXml([]);}}).catch(error=>{console.log('Error al buscar clientes:',error);setClientesXml([]);});};const clientesFiltrados=clientesXml.filter(cliente=>{const palabras=filtro.toUpperCase().split(\" \");const nombreCliente=cliente.nombre.toUpperCase();return palabras.every(palabra=>nombreCliente.includes(palabra));});const fetchNombre=async()=>{try{const res=await fetch('/api/usuarios/nombre',{method:'GET',credentials:'include'});if(res.ok){const data=await res.json();setNombre(data.nombre||\"\");}else{setNombre(\"\");}}catch(error){console.log('Error al obtener el nombre del usuario:',error);setNombre(\"\");}finally{setCargando(false);}};const fetchTelefono=()=>{fetch('/api/usuarios/telefono',{method:'GET',credentials:'include'}).then(res=>res.json()).then(data=>{if(data.telefono){setTelefono(data.telefono);}}).catch(error=>{console.log('Error al obtener el telefono del usuario:',error);});};const boleta=async(nombre,nombrecliente,descripcion,telefonoC,codigoCli,fec)=>{fetchTelefono();let telusuario=telefono;let data='COMPROBANTE \\n'+\"\\n\"+\"Emisor: \".concat(nombre,\" , tel: \").concat(telusuario,\"\\n\")+\"\\n\"+\"Nombre del cliente: \".concat(nombrecliente,\" \\n\")+\"\\n\"+\"Descripci\\xF3n: \".concat(descripcion,\" \\n\")+\"\\n\"+\"Tel\\xE9fono cliente: \".concat(telefonoC)+\"\\n\"+\"Fecha de ingreso: \".concat(fec)+\"\\n\"+\"\\n\"+\"\\n\"+\"C\\xF3digo: \".concat(codigoCli);const doc=new jsPDF();doc.addImage(Dataimage,'PNG',80,10,45,45);doc.setFontSize(22);doc.text(data,50,70);doc.save('boleta.pdf');};useEffect(()=>{fetchClientesXML();fetchNombre();},[]);useEffect(()=>{if(!cargando&&!nombre){navigate(\"/Ingreso\");}},[cargando,nombre,navigate]);if(!nombre){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"paneladmin\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Hola, \",nombre]}),/*#__PURE__*/_jsx(Link,{to:\"/Clientes\",children:\"Volver\"}),/*#__PURE__*/_jsx(\"input\",{className:\"inputbuscador\",type:\"text\",value:filtro,onChange:e=>setFiltro(e.target.value),placeholder:\"Buscar por nombre\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"ulcli\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Lista completa de clientes.\"}),/*#__PURE__*/_jsxs(\"li\",{className:\"listacliente\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Nombre\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Descripci\\xF3n\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Tel\\xE9fono\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Estado\"})]}),clientesFiltrados.map(cliente=>/*#__PURE__*/_jsxs(\"li\",{className:\"listacliente\",children:[/*#__PURE__*/_jsx(\"span\",{children:cliente.nombre}),/*#__PURE__*/_jsx(\"span\",{className:\"descripcioncliente\",children:cliente.descripcion}),/*#__PURE__*/_jsx(\"span\",{children:cliente.telefono}),/*#__PURE__*/_jsx(\"span\",{children:cliente.estado}),/*#__PURE__*/_jsx(\"span\",{className:\"listabotones\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btnboleta\",onClick:()=>boleta(nombre,cliente.nombre,cliente.descripcion,cliente.telefono,cliente.codigo,cliente.fecha),children:\"Boleta\"})})]},cliente.id))]})]});}export default ClientesXml;","map":{"version":3,"names":["React","useEffect","useState","jsPDF","Dataimage","useNavigate","Link","jsxs","_jsxs","jsx","_jsx","ClientesXml","clientesXml","setClientesXml","nombre","setNombre","telefono","setTelefono","cargando","setCargando","filtro","setFiltro","navigate","fetchClientesXML","fetch","method","credentials","then","res","json","data","Array","isArray","listaCompleta","console","error","catch","log","clientesFiltrados","filter","cliente","palabras","toUpperCase","split","nombreCliente","every","palabra","includes","fetchNombre","ok","fetchTelefono","boleta","nombrecliente","descripcion","telefonoC","codigoCli","fec","telusuario","concat","doc","addImage","setFontSize","text","save","className","children","to","type","value","onChange","e","target","placeholder","map","estado","onClick","codigo","fecha","id"],"sources":["C:/Users/matia/appservices/front/src/historialClientes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './paneluser.css';\r\n\r\n\r\nimport jsPDF from 'jspdf';\r\nimport Dataimage from './img.js';\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\n\r\nfunction  ClientesXml() {\r\n    const [clientesXml, setClientesXml] = useState([]);\r\n    const [nombre, setNombre] = useState('');\r\n    const [telefono, setTelefono] = useState('');\r\n    const [cargando, setCargando] = useState(true);\r\n    const [filtro, setFiltro] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const fetchClientesXML = () => {\r\n        fetch('/api/clientes/lista-completa',{\r\n        method: 'GET',\r\n        credentials: 'include'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (Array.isArray(data.listaCompleta)) {\r\n            setClientesXml(data.listaCompleta);\r\n            } else {\r\n            console.error('La respuesta no es un array:', data);\r\n            setClientesXml([]);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('Error al buscar clientes:', error);\r\n            setClientesXml([]);\r\n        });\r\n    };\r\n    \r\n\r\n    const clientesFiltrados = clientesXml.filter((cliente) => {\r\n        const palabras = filtro.toUpperCase().split(\" \");\r\n        const nombreCliente = cliente.nombre.toUpperCase();\r\n    \r\n        return palabras.every((palabra) => nombreCliente.includes(palabra));\r\n    });\r\n\r\n    const fetchNombre = async () => {\r\n        try{\r\n        const res = await fetch('/api/usuarios/nombre',{\r\n        method: 'GET',\r\n        credentials: 'include'\r\n        });\r\n            if (res.ok) {\r\n            const data = await res.json();\r\n            setNombre(data.nombre || \"\");\r\n            }else{\r\n            setNombre(\"\");\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.log('Error al obtener el nombre del usuario:', error);\r\n            setNombre(\"\");\r\n        } finally {\r\n            setCargando(false);\r\n        }\r\n    };\r\n\r\n    const fetchTelefono = () => {\r\n        fetch('/api/usuarios/telefono',{\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n        if (data.telefono) {\r\n            setTelefono(data.telefono);\r\n        }\r\n        })\r\n        .catch(error => {\r\n        console.log('Error al obtener el telefono del usuario:', error);\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const boleta = async (nombre, nombrecliente, descripcion, telefonoC, codigoCli, fec) =>{\r\n        fetchTelefono();\r\n        let telusuario = telefono;\r\n        let data = 'COMPROBANTE \\n'\r\n                +`\\n`\r\n                + `Emisor: ${nombre} , tel: ${telusuario}\\n`\r\n                +`\\n`\r\n                + `Nombre del cliente: ${nombrecliente} \\n`\r\n                +`\\n`\r\n                + `Descripción: ${descripcion} \\n`\r\n                +`\\n`\r\n                + `Teléfono cliente: ${telefonoC}`\r\n                +`\\n`\r\n                + `Fecha de ingreso: ${fec}`\r\n                +`\\n`\r\n                +`\\n`\r\n                +`\\n`\r\n                + `Código: ${codigoCli}`;\r\n\r\n        const doc = new jsPDF();\r\n\r\n\r\n        doc.addImage(Dataimage, 'PNG',80, 10, 45, 45);\r\n        doc.setFontSize(22);\r\n        doc.text(data, 50, 70);\r\n        doc.save('boleta.pdf');\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchClientesXML();\r\n        fetchNombre();\r\n    }, []);\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        if (!cargando && !nombre) {\r\n        navigate(\"/Ingreso\");\r\n        }\r\n    }, [cargando, nombre, navigate]);\r\n    if (!nombre) {\r\n        return null;\r\n    }\r\n        return (\r\n        <div className=\"paneladmin\">\r\n            <h1>Hola, {nombre}</h1>\r\n            <Link to=\"/Clientes\">Volver</Link>\r\n            <input\r\n            className=\"inputbuscador\"\r\n            type=\"text\"\r\n            value={filtro}\r\n            onChange={(e) => setFiltro(e.target.value)}\r\n            placeholder=\"Buscar por nombre\"\r\n            />\r\n            <ul className=\"ulcli\">\r\n            <p>Lista completa de clientes.</p>\r\n                <li className=\"listacliente\">\r\n                <span>Nombre</span>\r\n                <span>Descripción</span>\r\n                <span>Teléfono</span>\r\n                <span>Estado</span>\r\n                </li>\r\n            {clientesFiltrados.map(cliente => (\r\n                <li  key={cliente.id} className=\"listacliente\">\r\n                <span>{cliente.nombre}</span>\r\n                <span className=\"descripcioncliente\">{cliente.descripcion}</span>\r\n                <span>{cliente.telefono}</span>\r\n                <span>{cliente.estado}</span>\r\n                <span className=\"listabotones\">\r\n                    <button className=\"btnboleta\" onClick={() => boleta(nombre, cliente.nombre, cliente.descripcion, cliente.telefono, cliente.codigo, cliente.fecha)}>Boleta</button>\r\n                </span>\r\n                </li>\r\n            ))}\r\n\r\n            </ul> \r\n        </div>\r\n        );\r\n}\r\n\r\nexport default ClientesXml;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}